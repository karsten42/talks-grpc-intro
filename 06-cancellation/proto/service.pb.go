// Code generated by protoc-gen-go.
// source: service.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	Request
	Response
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	N int32 `protobuf:"varint,1,opt,name=n" json:"n,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

type Response struct {
	N   int32  `protobuf:"varint,1,opt,name=n" json:"n,omitempty"`
	Res uint64 `protobuf:"varint,2,opt,name=res" json:"res,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Response) GetRes() uint64 {
	if m != nil {
		return m.Res
	}
	return 0
}

func init() {
	proto1.RegisterType((*Request)(nil), "Request")
	proto1.RegisterType((*Response)(nil), "Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Fibonacci service

type FibonacciClient interface {
	Fib(ctx context.Context, in *Request, opts ...grpc.CallOption) (Fibonacci_FibClient, error)
}

type fibonacciClient struct {
	cc *grpc.ClientConn
}

func NewFibonacciClient(cc *grpc.ClientConn) FibonacciClient {
	return &fibonacciClient{cc}
}

func (c *fibonacciClient) Fib(ctx context.Context, in *Request, opts ...grpc.CallOption) (Fibonacci_FibClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Fibonacci_serviceDesc.Streams[0], c.cc, "/Fibonacci/Fib", opts...)
	if err != nil {
		return nil, err
	}
	x := &fibonacciFibClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Fibonacci_FibClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type fibonacciFibClient struct {
	grpc.ClientStream
}

func (x *fibonacciFibClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Fibonacci service

type FibonacciServer interface {
	Fib(*Request, Fibonacci_FibServer) error
}

func RegisterFibonacciServer(s *grpc.Server, srv FibonacciServer) {
	s.RegisterService(&_Fibonacci_serviceDesc, srv)
}

func _Fibonacci_Fib_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FibonacciServer).Fib(m, &fibonacciFibServer{stream})
}

type Fibonacci_FibServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type fibonacciFibServer struct {
	grpc.ServerStream
}

func (x *fibonacciFibServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _Fibonacci_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Fibonacci",
	HandlerType: (*FibonacciServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Fib",
			Handler:       _Fibonacci_Fib_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service.proto",
}

func init() { proto1.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x12, 0xe7, 0x62, 0x0f, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0xcc, 0x93, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d,
	0x62, 0xcc, 0x53, 0xd2, 0xe2, 0xe2, 0x08, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x45, 0x95,
	0x11, 0x12, 0xe0, 0x62, 0x2e, 0x4a, 0x2d, 0x96, 0x60, 0x52, 0x60, 0xd4, 0x60, 0x09, 0x02, 0x31,
	0x8d, 0x34, 0xb9, 0x38, 0xdd, 0x32, 0x93, 0xf2, 0xf3, 0x12, 0x93, 0x93, 0x33, 0x85, 0x64, 0xb8,
	0x98, 0xdd, 0x32, 0x93, 0x84, 0x38, 0xf4, 0xa0, 0xe6, 0x4a, 0x71, 0xea, 0xc1, 0x0c, 0x32, 0x60,
	0x74, 0x62, 0x8f, 0x62, 0x05, 0x5b, 0x9c, 0xc4, 0x06, 0xa6, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x38, 0xc5, 0xcf, 0xda, 0x90, 0x00, 0x00, 0x00,
}
