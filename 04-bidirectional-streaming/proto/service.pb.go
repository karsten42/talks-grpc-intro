// Code generated by protoc-gen-go.
// source: service.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	Request
	Response
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	X float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

type Response struct {
	Avg float64 `protobuf:"fixed64,1,opt,name=avg" json:"avg,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetAvg() float64 {
	if m != nil {
		return m.Avg
	}
	return 0
}

func init() {
	proto1.RegisterType((*Request)(nil), "Request")
	proto1.RegisterType((*Response)(nil), "Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RunningAvg service

type RunningAvgClient interface {
	Avg(ctx context.Context, opts ...grpc.CallOption) (RunningAvg_AvgClient, error)
}

type runningAvgClient struct {
	cc *grpc.ClientConn
}

func NewRunningAvgClient(cc *grpc.ClientConn) RunningAvgClient {
	return &runningAvgClient{cc}
}

func (c *runningAvgClient) Avg(ctx context.Context, opts ...grpc.CallOption) (RunningAvg_AvgClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RunningAvg_serviceDesc.Streams[0], c.cc, "/RunningAvg/Avg", opts...)
	if err != nil {
		return nil, err
	}
	x := &runningAvgAvgClient{stream}
	return x, nil
}

type RunningAvg_AvgClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type runningAvgAvgClient struct {
	grpc.ClientStream
}

func (x *runningAvgAvgClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runningAvgAvgClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for RunningAvg service

type RunningAvgServer interface {
	Avg(RunningAvg_AvgServer) error
}

func RegisterRunningAvgServer(s *grpc.Server, srv RunningAvgServer) {
	s.RegisterService(&_RunningAvg_serviceDesc, srv)
}

func _RunningAvg_Avg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RunningAvgServer).Avg(&runningAvgAvgServer{stream})
}

type RunningAvg_AvgServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type runningAvgAvgServer struct {
	grpc.ServerStream
}

func (x *runningAvgAvgServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runningAvgAvgServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RunningAvg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RunningAvg",
	HandlerType: (*RunningAvgServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Avg",
			Handler:       _RunningAvg_Avg_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}

func init() { proto1.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x12, 0xe7, 0x62, 0x0f, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0xac, 0x90, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0c,
	0x62, 0xac, 0x50, 0x92, 0xe1, 0xe2, 0x08, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x12,
	0xe0, 0x62, 0x4e, 0x2c, 0x4b, 0x87, 0xca, 0x81, 0x98, 0x46, 0x3a, 0x5c, 0x5c, 0x41, 0xa5, 0x79,
	0x79, 0x99, 0x79, 0xe9, 0x8e, 0x65, 0xe9, 0x42, 0x72, 0x5c, 0xcc, 0x20, 0x8a, 0x43, 0x0f, 0x6a,
	0x94, 0x14, 0xa7, 0x1e, 0x4c, 0xaf, 0x06, 0xa3, 0x01, 0xa3, 0x13, 0x7b, 0x14, 0x2b, 0xd8, 0xb6,
	0x24, 0x36, 0x30, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xf4, 0xb8, 0xca, 0x85, 0x00,
	0x00, 0x00,
}
